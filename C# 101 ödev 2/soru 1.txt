using System;
using System.Collections;

class Program
{
    static void Main(string[] args)
    {
        ArrayList asalSayilar = new ArrayList();
        ArrayList asalOlmayanSayilar = new ArrayList();

        for (int i = 0; i < 20; i++)
        {
            Console.Write("Bir pozitif sayı girin: ");
            string input = Console.ReadLine();

            // Geçerli giriş kontrolü
            if (int.TryParse(input, out int sayi) && sayi > 0)
            {
                if (IsPrime(sayi))
                {
                    asalSayilar.Add(sayi);
                }
                else
                {
                    asalOlmayanSayilar.Add(sayi);
                }
            }
            else
            {
                Console.WriteLine("Geçersiz giriş. Lütfen pozitif bir sayı girin.");
                i--; // Tekrar giriş al
            }
        }

        asalSayilar.Sort();
        asalSayilar.Reverse();
        asalOlmayanSayilar.Sort();
        asalOlmayanSayilar.Reverse();

        Console.WriteLine("\nAsal Sayılar (Büyükten Küçüğe): ");
        foreach (int sayi in asalSayilar)
        {
            Console.Write(sayi + " ");
        }

        Console.WriteLine("\nAsal Olmayan Sayılar (Büyükten Küçüğe): ");
        foreach (int sayi in asalOlmayanSayilar)
        {
            Console.Write(sayi + " ");
        }

        Console.WriteLine($"\nAsal Sayılar Sayısı: {asalSayilar.Count}, Ortalama: {GetAverage(asalSayilar)}");
        Console.WriteLine($"Asal Olmayan Sayılar Sayısı: {asalOlmayanSayilar.Count}, Ortalama: {GetAverage(asalOlmayanSayilar)}");
    }

    static bool IsPrime(int number)
    {
        if (number <= 1)
            return false;

        for (int i = 2; i <= Math.Sqrt(number); i++)
        {
            if (number % i == 0)
                return false;
        }
        return true;
    }

    static double GetAverage(ArrayList list)
    {
        int sum = 0;
        foreach (int number in list)
        {
            sum += number;
        }
        return (double)sum / list.Count;
    }
}
